{
  "openapi": "3.0.0",
  "info": {
    "title": "Api",
    "description": "Api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://realtimescheduler.cfapps.io/api/"
    }
  ],
  "paths": {
    "/group/": {
      "get": {
        "description": "Get all groups stored in Database",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new group and store in Database",
        "requestBody": {
          "description": "group object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New group was created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "400": {
            "description": "Error while creating group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/group/{group_Id}": {
      "get": {
        "parameters": [
          {
            "name": "group_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "description": "Return group by group_Id from Database",
        "responses": {
          "200": {
            "description": "Group was returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "priority": {
                      "type": "integer",
                      "minimum": 1,
                      "default": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error while retrieving group - group_Id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "name": "group_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "description": "Update group in Database",
        "requestBody": {
          "description": "group object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New group was updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "400": {
            "description": "Error while updating group - invalid group model",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error while updating group - group_id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "group_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "description": "Delete group from Database",
        "responses": {
          "200": {
            "description": "Group was deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "404": {
            "description": "Error while deleting group - group_id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/group/{group_Id}/start": {
      "put": {
        "description": "Start scheduling all task assigned to group with given group_Id",
        "parameters": [
          {
            "name": "group_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "All tasks in group successfully queued for scheduling",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "404": {
            "description": "Error - group_Id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/group/{group_Id}/stop": {
      "put": {
        "description": "Stop scheduling all task assigned to group with given group_Id",
        "parameters": [
          {
            "name": "group_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "All tasks in group successfully stopped scheduling",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "404": {
            "description": "Error - group_Id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/task/queued": {
      "get": {
        "description": "Returns an Array with all Tasks currently being scheduled",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "groupId"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                      },
                      "groupId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "executeTs": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/task/dispatched": {
      "get": {
        "description": "Returns an Array with all Tasks currently waiting for feedback from dispatcher",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "groupId"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                      },
                      "groupId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "executeTs": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/task/dispatched/error/count": {
      "get": {
        "description": "Returns the number of tasks with error-feedback from dispatcher",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/group/{group_Id}/tasks": {
      "get": {
        "description": "Returns the amount of tasks from a group",
        "parameters": [
          {
            "name": "group_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "404": {
            "description": "404: Group not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/group/count": {
      "get": {
        "description": "Returns the total number of groups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/task/": {
      "get": {
        "description": "Get all tasks stored in Database",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "groupId"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                      },
                      "groupId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "executeTs": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new task and store in Database",
        "requestBody": {
          "description": "Task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "groupId"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                  },
                  "groupId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "executeTs": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New task was created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "400": {
            "description": "Error while creating task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{task_Id}": {
      "get": {
        "parameters": [
          {
            "name": "task_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "description": "Return task by task_Id from Database",
        "responses": {
          "200": {
            "description": "Task was returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "groupId"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "priority": {
                      "type": "integer",
                      "minimum": 1,
                      "default": 1
                    },
                    "groupId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "executeTs": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error while retrieving task - task_Id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "name": "task_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "description": "Update task in Database",
        "requestBody": {
          "description": "Task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "groupId"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                  },
                  "groupId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "executeTs": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New task was updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "400": {
            "description": "Error while updating task - invalid task model",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error while updating task - task_id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "task_Id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "description": "Delete task from Database",
        "responses": {
          "200": {
            "description": "Task was deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              }
            }
          },
          "404": {
            "description": "Error while deleting task - task_id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "200_Integer": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "200_TaskList": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "groupId"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                  },
                  "groupId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "executeTs": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "200_GroupList": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "TaskModel": {
        "type": "object",
        "required": [
          "id",
          "groupId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "executeTs": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GroupModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          }
        }
      }
    }
  }
}
